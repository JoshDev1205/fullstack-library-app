/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AuthorCreateInput: { // input type
    books?: NexusGenInputs['BookCreateManyWithoutBooksInput'] | null; // BookCreateManyWithoutBooksInput
    country: string; // String!
    id?: string | null; // ID
    name: string; // String!
  }
  AuthorCreateOneWithoutAuthorInput: { // input type
    connect?: NexusGenInputs['AuthorWhereUniqueInput'] | null; // AuthorWhereUniqueInput
    create?: NexusGenInputs['AuthorCreateWithoutBooksInput'] | null; // AuthorCreateWithoutBooksInput
  }
  AuthorCreateWithoutBooksInput: { // input type
    country: string; // String!
    id?: string | null; // ID
    name: string; // String!
  }
  AuthorUpdateInput: { // input type
    books?: NexusGenInputs['BookUpdateManyWithoutAuthorInput'] | null; // BookUpdateManyWithoutAuthorInput
    country?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
  }
  AuthorUpdateOneRequiredWithoutBooksInput: { // input type
    connect?: NexusGenInputs['AuthorWhereUniqueInput'] | null; // AuthorWhereUniqueInput
    create?: NexusGenInputs['AuthorCreateWithoutBooksInput'] | null; // AuthorCreateWithoutBooksInput
    update?: NexusGenInputs['AuthorUpdateWithoutBooksDataInput'] | null; // AuthorUpdateWithoutBooksDataInput
    upsert?: NexusGenInputs['AuthorUpsertWithoutBooksInput'] | null; // AuthorUpsertWithoutBooksInput
  }
  AuthorUpdateWithoutBooksDataInput: { // input type
    country?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
  }
  AuthorUpsertWithoutBooksInput: { // input type
    create: NexusGenInputs['AuthorCreateWithoutBooksInput']; // AuthorCreateWithoutBooksInput!
    update: NexusGenInputs['AuthorUpdateWithoutBooksDataInput']; // AuthorUpdateWithoutBooksDataInput!
  }
  AuthorWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  BookCreateInput: { // input type
    author: NexusGenInputs['AuthorCreateOneWithoutAuthorInput']; // AuthorCreateOneWithoutAuthorInput!
    description: string; // String!
    id?: string | null; // ID
    price: number; // Int!
    quantity?: number | null; // Int
    title: string; // String!
  }
  BookCreateManyWithoutBooksInput: { // input type
    connect?: NexusGenInputs['BookWhereUniqueInput'][] | null; // [BookWhereUniqueInput!]
    create?: NexusGenInputs['BookCreateWithoutAuthorInput'][] | null; // [BookCreateWithoutAuthorInput!]
  }
  BookCreateWithoutAuthorInput: { // input type
    description: string; // String!
    id?: string | null; // ID
    price: number; // Int!
    quantity?: number | null; // Int
    title: string; // String!
  }
  BookUpdateInput: { // input type
    author?: NexusGenInputs['AuthorUpdateOneRequiredWithoutBooksInput'] | null; // AuthorUpdateOneRequiredWithoutBooksInput
    description?: string | null; // String
    id?: string | null; // ID
    price?: number | null; // Int
    quantity?: number | null; // Int
    title?: string | null; // String
  }
  BookUpdateManyDataInput: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    price?: number | null; // Int
    quantity?: number | null; // Int
    title?: string | null; // String
  }
  BookUpdateManyWithWhereNestedInput: { // input type
    data: NexusGenInputs['BookUpdateManyDataInput']; // BookUpdateManyDataInput!
    where: NexusGenInputs['MutationUpdateOneAuthorWhereInput']; // MutationUpdateOneAuthorWhereInput!
  }
  BookUpdateManyWithoutAuthorInput: { // input type
    connect?: NexusGenInputs['BookWhereUniqueInput'][] | null; // [BookWhereUniqueInput!]
    create?: NexusGenInputs['BookCreateWithoutAuthorInput'][] | null; // [BookCreateWithoutAuthorInput!]
    delete?: NexusGenInputs['BookWhereUniqueInput'][] | null; // [BookWhereUniqueInput!]
    deleteMany?: NexusGenInputs['MutationUpdateOneAuthorWhereInput'][] | null; // [MutationUpdateOneAuthorWhereInput!]
    disconnect?: NexusGenInputs['BookWhereUniqueInput'][] | null; // [BookWhereUniqueInput!]
    set?: NexusGenInputs['BookWhereUniqueInput'][] | null; // [BookWhereUniqueInput!]
    update?: NexusGenInputs['BookUpdateWithWhereUniqueWithoutAuthorInput'][] | null; // [BookUpdateWithWhereUniqueWithoutAuthorInput!]
    updateMany?: NexusGenInputs['BookUpdateManyWithWhereNestedInput'][] | null; // [BookUpdateManyWithWhereNestedInput!]
    upsert?: NexusGenInputs['BookUpsertWithWhereUniqueWithoutAuthorInput'][] | null; // [BookUpsertWithWhereUniqueWithoutAuthorInput!]
  }
  BookUpdateWithWhereUniqueWithoutAuthorInput: { // input type
    data: NexusGenInputs['BookUpdateWithoutAuthorDataInput']; // BookUpdateWithoutAuthorDataInput!
    where: NexusGenInputs['BookWhereUniqueInput']; // BookWhereUniqueInput!
  }
  BookUpdateWithoutAuthorDataInput: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    price?: number | null; // Int
    quantity?: number | null; // Int
    title?: string | null; // String
  }
  BookUpsertWithWhereUniqueWithoutAuthorInput: { // input type
    create: NexusGenInputs['BookCreateWithoutAuthorInput']; // BookCreateWithoutAuthorInput!
    update: NexusGenInputs['BookUpdateWithoutAuthorDataInput']; // BookUpdateWithoutAuthorDataInput!
    where: NexusGenInputs['BookWhereUniqueInput']; // BookWhereUniqueInput!
  }
  BookWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: number | null; // Int
    notIn?: number[] | null; // [Int!]
  }
  MutationUpdateOneAuthorFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: number | null; // Int
    notIn?: number[] | null; // [Int!]
  }
  MutationUpdateOneAuthorWhereInput: { // input type
    AND?: NexusGenInputs['MutationUpdateOneAuthorWhereInput'][] | null; // [MutationUpdateOneAuthorWhereInput!]
    description?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['MutationUpdateOneAuthorWhereInput'][] | null; // [MutationUpdateOneAuthorWhereInput!]
    OR?: NexusGenInputs['MutationUpdateOneAuthorWhereInput'][] | null; // [MutationUpdateOneAuthorWhereInput!]
    price?: NexusGenInputs['IntFilter'] | null; // IntFilter
    quantity?: NexusGenInputs['MutationUpdateOneAuthorFilter'] | null; // MutationUpdateOneAuthorFilter
    title?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Author: photon.Author;
  Book: photon.Book;
  Mutation: {};
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AuthorCreateInput: NexusGenInputs['AuthorCreateInput'];
  AuthorCreateOneWithoutAuthorInput: NexusGenInputs['AuthorCreateOneWithoutAuthorInput'];
  AuthorCreateWithoutBooksInput: NexusGenInputs['AuthorCreateWithoutBooksInput'];
  AuthorUpdateInput: NexusGenInputs['AuthorUpdateInput'];
  AuthorUpdateOneRequiredWithoutBooksInput: NexusGenInputs['AuthorUpdateOneRequiredWithoutBooksInput'];
  AuthorUpdateWithoutBooksDataInput: NexusGenInputs['AuthorUpdateWithoutBooksDataInput'];
  AuthorUpsertWithoutBooksInput: NexusGenInputs['AuthorUpsertWithoutBooksInput'];
  AuthorWhereUniqueInput: NexusGenInputs['AuthorWhereUniqueInput'];
  BookCreateInput: NexusGenInputs['BookCreateInput'];
  BookCreateManyWithoutBooksInput: NexusGenInputs['BookCreateManyWithoutBooksInput'];
  BookCreateWithoutAuthorInput: NexusGenInputs['BookCreateWithoutAuthorInput'];
  BookUpdateInput: NexusGenInputs['BookUpdateInput'];
  BookUpdateManyDataInput: NexusGenInputs['BookUpdateManyDataInput'];
  BookUpdateManyWithWhereNestedInput: NexusGenInputs['BookUpdateManyWithWhereNestedInput'];
  BookUpdateManyWithoutAuthorInput: NexusGenInputs['BookUpdateManyWithoutAuthorInput'];
  BookUpdateWithWhereUniqueWithoutAuthorInput: NexusGenInputs['BookUpdateWithWhereUniqueWithoutAuthorInput'];
  BookUpdateWithoutAuthorDataInput: NexusGenInputs['BookUpdateWithoutAuthorDataInput'];
  BookUpsertWithWhereUniqueWithoutAuthorInput: NexusGenInputs['BookUpsertWithWhereUniqueWithoutAuthorInput'];
  BookWhereUniqueInput: NexusGenInputs['BookWhereUniqueInput'];
  IntFilter: NexusGenInputs['IntFilter'];
  MutationUpdateOneAuthorFilter: NexusGenInputs['MutationUpdateOneAuthorFilter'];
  MutationUpdateOneAuthorWhereInput: NexusGenInputs['MutationUpdateOneAuthorWhereInput'];
  StringFilter: NexusGenInputs['StringFilter'];
}

export interface NexusGenFieldTypes {
  Author: { // field return type
    books: NexusGenRootTypes['Book'][] | null; // [Book!]
    country: string; // String!
    id: string; // ID!
    name: string; // String!
  }
  Book: { // field return type
    author: NexusGenRootTypes['Author']; // Author!
    description: string; // String!
    id: string; // ID!
    price: number; // Int!
    quantity: number | null; // Int
    title: string; // String!
  }
  Mutation: { // field return type
    createOneAuthor: NexusGenRootTypes['Author']; // Author!
    createOneBook: NexusGenRootTypes['Book']; // Book!
    deleteOneAuthor: NexusGenRootTypes['Author'] | null; // Author
    deleteOneBook: NexusGenRootTypes['Book'] | null; // Book
    updateOneAuthor: NexusGenRootTypes['Author'] | null; // Author
    updateOneBook: NexusGenRootTypes['Book'] | null; // Book
  }
  Query: { // field return type
    findManyAuthor: NexusGenRootTypes['Author'][] | null; // [Author!]
    findManyBook: NexusGenRootTypes['Book'][] | null; // [Book!]
    findOneAuthor: NexusGenRootTypes['Author'] | null; // Author
    findOneBook: NexusGenRootTypes['Book'] | null; // Book
  }
}

export interface NexusGenArgTypes {
  Author: {
    books: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createOneAuthor: { // args
      data: NexusGenInputs['AuthorCreateInput']; // AuthorCreateInput!
    }
    createOneBook: { // args
      data: NexusGenInputs['BookCreateInput']; // BookCreateInput!
    }
    deleteOneAuthor: { // args
      where: NexusGenInputs['AuthorWhereUniqueInput']; // AuthorWhereUniqueInput!
    }
    deleteOneBook: { // args
      where: NexusGenInputs['BookWhereUniqueInput']; // BookWhereUniqueInput!
    }
    updateOneAuthor: { // args
      data: NexusGenInputs['AuthorUpdateInput']; // AuthorUpdateInput!
      where: NexusGenInputs['AuthorWhereUniqueInput']; // AuthorWhereUniqueInput!
    }
    updateOneBook: { // args
      data: NexusGenInputs['BookUpdateInput']; // BookUpdateInput!
      where: NexusGenInputs['BookWhereUniqueInput']; // BookWhereUniqueInput!
    }
  }
  Query: {
    findManyAuthor: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    findManyBook: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    findOneAuthor: { // args
      where: NexusGenInputs['AuthorWhereUniqueInput']; // AuthorWhereUniqueInput!
    }
    findOneBook: { // args
      where: NexusGenInputs['BookWhereUniqueInput']; // BookWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Author" | "Book" | "Mutation" | "Query";

export type NexusGenInputNames = "AuthorCreateInput" | "AuthorCreateOneWithoutAuthorInput" | "AuthorCreateWithoutBooksInput" | "AuthorUpdateInput" | "AuthorUpdateOneRequiredWithoutBooksInput" | "AuthorUpdateWithoutBooksDataInput" | "AuthorUpsertWithoutBooksInput" | "AuthorWhereUniqueInput" | "BookCreateInput" | "BookCreateManyWithoutBooksInput" | "BookCreateWithoutAuthorInput" | "BookUpdateInput" | "BookUpdateManyDataInput" | "BookUpdateManyWithWhereNestedInput" | "BookUpdateManyWithoutAuthorInput" | "BookUpdateWithWhereUniqueWithoutAuthorInput" | "BookUpdateWithoutAuthorDataInput" | "BookUpsertWithWhereUniqueWithoutAuthorInput" | "BookWhereUniqueInput" | "IntFilter" | "MutationUpdateOneAuthorFilter" | "MutationUpdateOneAuthorWhereInput" | "StringFilter";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: {};
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}